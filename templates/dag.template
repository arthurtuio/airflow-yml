from airflow import DAG
from datetime import timedelta, datetime

{% if tasks %}
from lib.operators.{{ tasks.operator }} import {{ tasks.operator_class }}
{% endif -%}

from lib.config.owner import Owner


default_args = {
    "owner": Owner.{{ owner }}.name,
    "depends_on_past": {{ depends_on_past }},
    "start_date": '{{ start_date }}',
    "email": [Owner.{{ owner }}.value],
    "email_on_failure": {{ email_on_failure }},
    "email_on_retry": {{ email_on_retry }},
    "retries": {{ retries }},
    "retry_delay": {{ retry_delay }},
}

dag = DAG(
    dag_id='{{ dag_name }}',
    catchup={{ catchup }},
    default_args=default_args,
    max_active_runs={{ max_active_runs }},
    schedule_interval='{{ schedule }}',
)

dag.doc_md = __doc__

{% if tasks %}

{% import "operator_bq_to_hubspot.template" as bq_to_hubspot %}
{{ bq_to_hubspot.task(tasks.name, tasks.operator_class, tasks.source_sql) }}

{% endif -%}
